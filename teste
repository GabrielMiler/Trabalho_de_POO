#include <iostream>
#include <cmath>
#include <vector>
#include <string>
#include <iterator>
#define TAM 1000
using namespace std;

vector<string> cpfs;
vector<string> nomes;
vector<string> enderecos;
vector<double> saldos;
vector<string> telefones;

int showMenu(){
  int op;
  
  cout << "1. Cadastro" << endl;
  cout << "2. Acessar a conta" << endl;
  cout << "3. Sair" << endl;

  cin >> op;
  return op;
}

int selectOperacao(){
  int op;

  cout << "1. Saque" << endl;
  cout << "2. Deposito" << endl;
  cout << "3. Editar Informações" << endl;
  cout << "4. Verificar Informações" << endl;
  cout << "5. Deletar Conta" << endl;
  cout << "6. Sair" << endl;

  cin >> op;
  
  return op;
}

void cadastrar(){
  string nome,endereco, cpf, telefone;
  cin.ignore(); // Limpa o buffer de entrada
  
  cout << "Informações de cadastro"<< endl;
  cout << "Insira aqui seu nome: " << endl;
  getline(cin, nome, '\n');
  nomes.push_back(nome);
  cout << "Insira aqui seu cpf: " << endl;
  getline(cin, cpf, '\n');
  cpfs.push_back(cpf);
  cout <<"Insira aqui seu telefone: "  << endl;
  getline(cin, telefone);
  telefones.push_back(telefone);
  cout <<"Insira aqui seu endereço: " << endl;
  getline(cin, endereco);
  enderecos.push_back(endereco);
  saldos.push_back(0);
}

int acessarConta(){
  string cpf;
  int pos = -1;
  cin.ignore();
  
  cout << "Digite seu CPF: ";
  getline(cin, cpf);

  for(auto it = cpfs.begin(); it!=cpfs.end(); ++it){
    if (cpf == *it){
      pos = distance(cpfs.begin(), it);
      break;
    }
  }

  if (pos == -1){
    cout << "Cadastro não encontrado." << endl;
  }

  return pos;
}

void sacar(int index){
  double valor_retirado;
  cin.ignore();
  
  cout << "Quanto gostaria de sacar? ";
  cin >> valor_retirado;
  
  if (valor_retirado > saldos[index]) {
      cout << "Saldo insuficiente!" << endl;
  } else {
      saldos[index] -= valor_retirado;
      cout << "Saque realizado com sucesso!" << endl;
      cout << "Saldo atual: " << saldos[index] << endl;
  }
}

void depositar(int index){
  double valor_depositado;
  cin.ignore();
  
  cout << "Quanto gostaria de depositar? ";
  cin >> valor_depositado;
  
  saldos[index] += valor_depositado;
  cout << "Depósito realizado com sucesso!" << endl;
  cout << "Saldo atual: " << saldos[index] << endl;
  
}

void editar(int pos){
  int op;
  cin.ignore();

  cout << "Selecione a informação que gostaria de editar: " << endl;
  cout << "1. Telefone" << endl;
  cout << "2. Endereço" << endl;
  cin >> op;

  if (op == 1){
    cout << "Digite o novo telefone: " << endl;
    cin >> telefones[pos];
  }
  else if (op == 2){
    cout << "Digite o novo endereço: " << endl;
    cin >> enderecos[pos];
  }
  else{
    cout << "Operação não encontrada" << endl;
  }
}

void lerInfo(int i){
  cout << "Suas informações atuais: " << endl;
  cout << "1. Nome: " << nomes[i] << endl;
  cout << "2. CPF: " << cpfs[i] <<  endl;
  cout << "3. Telefone: " << telefones[i] << endl;
  cout << "4. Endereço: " << enderecos[i] << endl;
  cout << "5. Saldo: " << saldos[i] << endl;
  cout << "++++++++++++++++++++++" << endl;
}

void deletarConta(int i){
  
  for(auto it = cpfs.size(); it > i ; it--){
    if (i == cpfs.size() - 1){
      cpfs.pop_back();
      nomes.pop_back();
      telefones.pop_back();
      enderecos.pop_back();
      saldos.pop_back();
    }
    else{
      cpfs[it] = cpfs[it+1];
      nomes[it] = nomes[it+1];
      telefones[it] = telefones[it+1];
      enderecos[it] = enderecos[it+1];
      saldos[it] = saldos[it+1];
    }
  }

  cout << "Conta deletada com sucesso." << endl;
  cout << cpfs.size() << " " << cpfs[0] << endl;
  
}

void menuOperacoes(int op, int pos){
  if (op == 1){
    sacar(pos);
  }
  else if (op == 2){
    depositar(pos);
  }
  else if (op == 3){
    editar(pos);
  }
  else if (op == 4){
    lerInfo(pos);
  }
  else if (op == 5){
    deletarConta(pos);
  }
  else if (op == 6){
    cout << "Saindo da conta." << endl;
  }
  else {
      cout << "Operação inválida!" << endl;
  }
}

int main() { 
  int menu, operacao, posicao;
  
  while (true){
    menu = showMenu();
    
    if (menu == 1){
      cadastrar();
    }
    else if (menu == 2){
      posicao = acessarConta();
      if (posicao >= 0){
        operacao = selectOperacao();
        menuOperacoes(operacao, posicao);
      }
    }
    else if (menu == 3){
      break;
    }
  }
  
  
  return 0;
}
